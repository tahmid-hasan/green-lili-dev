{%- liquid
  assign current_filter_size = 0

  for filter in collection.filters
    assign current_filter_size = current_filter_size | plus: filter.active_values.size
  endfor
-%}

{% assign active_thumnail_first_title = blank %}
{% assign active_thumnail_first_url = blank %}
{% assign active_thumnail_second_title = blank %}
{% assign active_thumnail_second_url = blank %}

<div 
  class="main-collection-with-sidebar">
  <div class="sidebar-sticky">
    <div class="collection-sidebar">
      <div class="sidebar-header">
        {% render 'icon-close' %}
      </div>
      <div class="header-divider"></div>
      <ul class="sidebar-block__content">
        {% for link in linklists[section.settings.side_menu].links %}
          {% assign active_node = false %}        
          {% if link.active %}
            {% assign active_node = true %}
            {% assign active_thumnail_first_title = link.title %}
            {% assign active_thumnail_first_url = link.url %}
          {% endif %}
          <li class="sidebar-block__item" data-mtr-level="1">
            <a {% if link.active %}class="active"{% endif %} href="{{ link.url }}" title="{{ link.title | escape }}">
              {{ link.title }}
            </a>
          </li>
          {% if link.handle == "rugs" or link.handle == "kids-wall-art" or link.handle == "green-wall-art" %}
            <li class="sidebar-block__item divider"></li>
          {% endif %}
          {% unless link.links == blank %}          
            {% for sub_link in link.links %}
              {% if sub_link.active %}
                {% assign active_node = true %}
                {% assign active_thumnail_first_title = link.title %}
                {% assign active_thumnail_first_url = link.url %}
                {% assign active_thumnail_second_title = sub_link.title %}
                {% assign active_thumnail_second_url = sub_link.url %}
              {% endif %}
            {% endfor %}
            {% for sub_link in link.links %}
              <li class="sidebar-block__item" data-mtr-level-header="{{link.title | escape}}" data-mtr-level="2">
                <a {% if sub_link.active %}class="active"{% endif %} href="{{ sub_link.url }}" title="{{ sub_link.title | escape }}" {% unless active_node %}style="display: none;"{% endunless %}>
                  {{ sub_link.title }}
                </a>
              </li>
            {% endfor %}
          {% endunless %}
        {% endfor %}
      </ul>
    </div>
  </div>
  <div
    class="collection-content"
    data-section-id="{{ section.id }}"
    data-section-type="collection-grid"
  >
    <div class="collection-thumbnails">
      <nav class="thumbnail">
        <ul>
          <li class="thumnail-item">
            <a href="/">Home</a>
          </li>
          <li class="slash-item">/</li>
          <li class="thumnail-item">
            <a href="{{active_thumnail_first_url}}">{{active_thumnail_first_title}}</a>
          </li>
          {% if active_thumnail_second_title != blank and active_thumnail_second_url != blank %}
            <li class="slash-item">/</li>
            <li class="thumnail-item">
              <a href="{{active_thumnail_second_url}}">{{active_thumnail_second_title}}</a>
            </li>
          {% endif %}
        </ul>
      </nav>
    </div>
    <div class="collection-header">
      <div class="collection-details">
        <h1 class="section-header__title main-title-collection">
          {{ collection.title }}
        </h1>
        <p class="header-description">{{ collection.description }}</p>
      </div>
      <div class="collection-image">
        {% if collection.image %}
       {%- render 'image-element',
              img: collection.image,
              img_width: 2400,
              classes: 'lazyload blur-up collection-main-image',
              preload: false,
          
          -%}
        {% endif %}
      </div>
    </div>
    <div id="CollectionAjaxContent">
      <div class="page-width">
        <div class="grid">        
          <div class="grid__item medium-up--four-fifths grid__item--content">
            {%- liquid
              for block in section.blocks
                case block.type
                when 'product_grid'
                  assign paginate_by = block.settings.per_row | times: block.settings.rows_per_page
                endcase
              endfor
            -%}
            {%- paginate collection.products by paginate_by -%}
            {%- for block in section.blocks -%}
              <div {{ block.shopify_attributes }} {%- if block.type == 'product-grid' -%}data-scroll-to{%- endif -%}>
                {%- case block.type -%}
                {%- when 'collection_description' -%}
                  {%- if collection.description != blank and current_filter_size == 0 -%}
                    <div class="rte collection__description">
                      {{ collection.description }}
                    </div>
                  {%- endif -%}
                {%- when 'subcollections' -%}
                  {%- if paginate.current_page == 1 and current_filter_size == 0 -%}
                    {%- render 'subcollections', per_row: block.settings.subcollections_per_row -%}
                  {%- endif -%}
                {%- when 'product_grid' -%}
                  <div data-scroll-to>
                    {% render 'collection-grid',
                      collection: collection,
                      items: collection.products,
                      enable_sidebar: section.settings.enable_sidebar,
                      filter_style: section.settings.filter_style,
                      enable_sort: section.settings.enable_sort,
                      enable_collection_count: block.settings.enable_collection_count,
                      per_row: block.settings.per_row,
                      mobile_flush_grid: block.settings.mobile_flush_grid,
                      quick_shop_enable: settings.quick_shop_enable
                    %}
                    {%- if paginate.pages > 1 -%}
                      {%- render 'pagination', paginate: paginate -%}
                    {%- endif -%}
                  </div>
                {%- endcase -%}
              </div>
            {%- endfor -%}
  
            {%- endpaginate -%}
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

{%- if section.settings.enable_sidebar == false or section.settings.filter_style == 'drawer' or collection.filters.size == 0 -%}
{% comment %}
  Override grid styles if sidebar is disabled
{% endcomment %}
{% style %}
  .collection-content .grid__item--sidebar { width: 0; padding:0; }
  .collection-content .grid__item--content { width: 100%; }
  .grid__item--sidebar { position: static; overflow: hidden; }
{% endstyle %}
{%- endif -%}

<script type="application/ld+json">
{
  "@context": "http://schema.org",
  "@type": "CollectionPage",
  {% if collection.description != blank %}
    "description": {{ collection.description | strip_html | json }},
  {% endif %}
  {% if page_image %}
    {% assign image_size = page_image.width | append: 'x' %}
    "image": {
      "@type": "ImageObject",
      "height": {{ page_image.height | json }},
      "url": {{ page_image | img_url: image_size | prepend: "https:" | json }},
      "width": {{ page_image.width | json }}
    },
  {% endif %}
  "name": {{ collection.title | json }}
}
</script>

{% schema %}
{
  "name": "t:sections.main-collection.name",
  "settings": [
    {
      "type": "header",
      "content": "t:sections.main-collection.settings.header_filtering_and_sorting"
    },
    {
      "type": "checkbox",
      "id": "enable_sidebar",
      "label": "t:sections.main-collection.settings.enable_sidebar.label",
      "default": true,
      "info": "t:sections.main-collection.settings.enable_sidebar.info"
    },
    {
      "type": "checkbox",
      "id": "collapsed",
      "label": "t:sections.main-collection.settings.collapsed.label",
      "default": true
    },
    {
      "type": "select",
      "id": "filter_style",
      "label": "t:sections.main-collection.settings.filter_style.label",
      "default": "sidebar",
      "options": [
        {
          "value": "sidebar",
          "label": "t:sections.main-collection.settings.filter_style.options.sidebar.label"
        },
        {
          "value": "drawer",
          "label": "t:sections.main-collection.settings.filter_style.options.drawer.label"
        }
      ]
    },
    {
      "type": "checkbox",
      "id": "enable_color_swatches",
      "label": "t:sections.main-collection.settings.enable_color_swatches.label",
      "info": "t:sections.main-collection.settings.enable_color_swatches.info"
    },
    {
      "type": "checkbox",
      "id": "enable_sort",
      "label": "t:sections.main-collection.settings.enable_sort.label",
      "default": true
    },
    {
      "type": "link_list",
      "id": "side_menu",
      "label": "Side menu",
      "info": "This menu won't show drop-down items."
    }
  ],
  "blocks": [
    {
      "type": "collection_description",
      "name": "t:sections.main-collection.blocks.collection_description.name",
      "limit": 1
    },
    {
      "type": "product_grid",
      "name": "t:sections.main-collection.blocks.products.name",
      "settings": [
        {
          "type": "checkbox",
          "id": "enable_collection_count",
          "label": "t:sections.main-collection.blocks.products.settings.enable_collection_count.label",
          "default": true
        },
        {
          "type": "range",
          "id": "per_row",
          "label": "t:sections.main-collection.blocks.products.settings.per_row.label",
          "default": 4,
          "min": 2,
          "max": 5,
          "step": 1
        },
        {
          "type": "range",
          "id": "rows_per_page",
          "label": "t:sections.main-collection.blocks.products.settings.rows_per_page.label",
          "default": 7,
          "min": 3,
          "max": 20,
          "step": 1
        },
        {
          "type": "checkbox",
          "id": "mobile_flush_grid",
          "label": "t:sections.main-collection.blocks.products.settings.mobile_flush_grid.label",
          "default": false
        }
      ],
      "limit": 1
    },
    {
      "type": "subcollections",
      "name": "t:sections.main-collection.blocks.subcollections.name",
      "settings": [
        {
          "type": "paragraph",
          "content": "t:sections.main-collection.blocks.subcollections.settings.content"
        },
        {
          "type": "range",
          "id": "subcollections_per_row",
          "label": "t:sections.main-collection.blocks.subcollections.settings.subcollections_per_row.label",
          "default": 5,
          "min": 2,
          "max": 5,
          "step": 1
        }
      ],
      "limit": 1
    }
  ]
}
{% endschema %}

