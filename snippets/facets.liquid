{%- liquid
  unless enable_color_swatch
    assign enable_color_swatch = section.settings.enable_color_swatch
  endunless
-%}
{%- if results.filters != empty -%}
  <form
    class="face-form"
    method="GET"
    action="{{ request.path }}"
    is="facet-form"
    data-section-id="{{ section.id }}"
    data-history
    update-on-change
  >
    <div data-filter data-index="{{ context }}-page" hidden>
      <input type="hidden" name="page" value="">

      {%- if results.current_type != blank or results.current_vendor != blank -%}
        <input type="hidden" name="q" value="{{ results.current_vendor | default: results.current_type | escape }}">
      {%- endif -%}

      {%- if request.page_type == 'search' -%}
        <input type="hidden" name="q" value="{{ results.terms | escape }}">
      {%- endif -%}

      {%- if show_sort_by == blank and results.sort_by != blank -%}
        <input type="hidden" name="sort_by" value="{{ results.sort_by }}">
      {%- endif -%}
    </div>
    {%- for filter in results.filters -%}
      {%- assign filter_id = context | append: '-' | append: filter.param_name -%}
      {% liquid
        if filter.presentation == 'image'
          assign show_more_number = 12
        else
          assign show_more_number = 14
        endif

        assign downcase_label = filter.label | downcase

        assign expand = false
        if section.settings.expand_filter_groups != blank
          assign expand_filter_groups = section.settings.expand_filter_groups | downcase
          if expand_filter_groups contains downcase_label
            assign expand = true
          endif
        endif
      %}
      {%- case filter.type -%}
        {%- when 'list', 'boolean' -%}
          {%- liquid
            assign is_color = false

            if settings.color_swatch_trigger != blank and enable_color_swatch
              assign swatch_trigger = settings.color_swatch_trigger | downcase
              if swatch_trigger contains downcase_label
                assign is_color = true
              elsif swatch_trigger contains 'color' and downcase_label contains 'colour'
                assign is_color = true
              endif
            endif

            assign sorted_values = filter.values
            # Keep the selected values grouped together when operator is AND
            if filter.operator == 'AND'
              assign active_filter_values = filter.values | where: 'active', true
              assign inactive_filter_values = filter.values | where: 'active', false
              assign sorted_values = active_filter_values | concat: inactive_filter_values
            endif
          -%}
          <details
            class="accordion-details facet-accordion-details"
            is="accordion-details"
            data-filter
            data-index="{{ filter_id }}"
            {% if expand %}
              open
            {% endif %}
          >
            <summary class="accordion-details__summary flex items-center justify-between">
              <span class="h4">
                {{- filter.label | escape -}}
                {%- if filter.operator == 'AND' -%}
                  <small class="accordion-details__helptext block text-subtext text-sm overflow-hidden">
                    {{- 'products.facets.filter_and_operator_subtitle' | t -}}
                  </small>
                {%- endif -%}
              </span>
              {%- render 'icon-plus-toggle' -%}
            </summary>
            <div class="accordion-details__content parent-display flex flex-col gap-3">
              {%- if is_color or filter.presentation == 'swatch' -%}
                <ul class="swatches flex flex-wrap items-center">
                  {%- for filter_value in sorted_values -%}
                    {%- liquid
                      assign filter_value_id = filter_id | append: '-' | append: forloop.index
                      assign is_disabled = false
                      if filter_value.count == 0 and filter_value.active == false
                        assign is_disabled = true
                      endif
                    -%}
                    <li
                      data-tooltip
                      class="filter-item{% if forloop.index > show_more_number %} show-more-item hidden{% endif %}"
                    >
                      {%- capture filter_label -%}{{ filter_value.label }} ({{ filter_value.count }}){%- endcapture -%}
                      {%- liquid
                        if filter.presentation == 'swatch'
                          render 'swatch', allow_multiple: true, value: filter_value.value, name: filter_value.param_name, id: filter_value_id, selected: filter_value.active, disabled: is_disabled, swatch: filter_value.swatch, tooltip: filter_label
                        else
                          render 'swatch', allow_multiple: true, value: filter_value.value, name: filter_value.param_name, id: filter_value_id, selected: filter_value.active, disabled: is_disabled, file_extension: 'png', tooltip: filter_label
                        endif
                      -%}
                    </li>
                  {%- endfor -%}
                </ul>
              {%- elsif filter.presentation == 'image' -%}
                <ul class="swatches flex items-center">
                  {%- for filter_value in sorted_values -%}
                    {%- liquid
                      assign filter_value_id = filter_id | append: '-' | append: forloop.index
                      assign is_disabled = false
                      if filter_value.count == 0 and filter_value.active == false
                        assign is_disabled = true
                      endif

                      assign swatch_image = blank
                      assign swatch_fallback = filter_value.value | split: ' ' | last | handle
                      assign swatch_focal_point = null
                      if filter_value.image
                        assign swatch_image = filter_value.image | image_url: width: 144
                        assign swatch_focal_point = filter_value.image.presentation.focal_point
                      endif
                    -%}
                    <li
                      data-tooltip
                      class="filter-item{% if forloop.index > show_more_number %} show-more-item hidden{% endif %}"
                    >
                      <input
                        class="visually-hidden"
                        name="{{ filter_value.param_name }}"
                        value="{{ filter_value.value | escape }}"
                        type="checkbox"
                        id="{{ filter_value_id }}"
                        {% if is_disabled %}
                          disabled
                        {% endif -%}
                        {% if filter_value.active %}
                          checked
                        {% endif %}
                      >
                      <label
                        class="swatch-color swatch-image block relative{% if class != blank %} {{ class }}{% endif %}"
                        for="{{ filter_value_id | escape }}"
                        style="--swatch-background: {{ swatch_fallback }};{% if swatch_image != blank %} background-image: url({{ swatch_image }});{% endif %}{% if swatch_focal_point %} --swatch-focal-point: {{ swatch_focal_point }}{% endif %}"
                      >
                        <span class="tooltip">{{ filter_value.label | escape }} ({{ filter_value.count }})</span>
                      </label>
                    </li>
                  {%- endfor -%}
                </ul>
              {%- else -%}
                <ul class="grid gap-3">
                  {%- for filter_value in sorted_values -%}
                    {%- liquid
                      assign filter_value_id = filter_id | append: '-' | append: forloop.index
                      assign is_disabled = false
                      if filter_value.count == 0 and filter_value.active == false
                        assign is_disabled = true
                      endif
                    -%}
                    <li class="flex items-center gap-3{% if forloop.index > show_more_number %} show-more-item hidden{% endif %}">
                      <input
                        name="{{ filter_value.param_name }}"
                        value="{{ filter_value.value | escape }}"
                        class="checkbox"
                        id="{{ filter_value_id | escape }}"
                        type="checkbox"
                        {% if filter_value.active %}
                          checked
                        {% endif -%}
                        {% if is_disabled %}
                          disabled
                        {% endif %}
                      >
                      <label for="{{ filter_value_id }}" class="flex items-center gap-1">
                        {{- filter_value.label | escape -}}
                        <span class="text-sm{% unless filter_value.active %} text-subtext{% endunless %}"
                          >({{ filter_value.count }})</span
                        >
                      </label>
                    </li>
                  {%- endfor -%}
                </ul>
              {%- endif -%}
              {%- if filter.values.size > show_more_number -%}
                <show-more-button>
                  <button
                    class="button-show-more btn--link"
                    id="Show-More-{{ forloop.index }}-{{ section.id }}"
                    type="button"
                  >
                    <span class="label-show-more label-text"
                      ><span aria-hidden="true">+ </span>{{ 'products.facets.show_more' | t -}}
                    </span>
                    <span class="label-show-less label-text hidden"
                      ><span aria-hidden="true">- </span>{{ 'products.facets.show_less' | t -}}
                    </span>
                  </button>
                </show-more-button>
              {%- endif %}
            </div>
          </details>
        {%- when 'price_range' -%}
          {%- liquid
            assign min_value = filter.min_value.value | default: 0.0 | divided_by: 100.0
            assign max_value = filter.max_value.value | default: filter.range_max | divided_by: 100.0
            assign range_max = filter.range_max | divided_by: 100.0 | ceil
            assign step_value = max_value | minus: min_value | divided_by: 100.0 | ceil | at_most: 1
            assign lower_progress_limit = min_value | divided_by: range_max | times: 100.0
            assign higher_progress_limit = max_value | divided_by: range_max | times: 100.0
          -%}
          <details
            is="accordion-details"
            class="accordion-details facet-accordion-details"
            data-filter
            data-index="{{ filter_id }}"
            {% if expand %}
              open
            {% endif %}
          >
            <summary class="accordion-details__summary flex items-center justify-between">
              <span class="h4">{{- filter.label | escape -}}</span>
              {%- render 'icon-plus-toggle' -%}
            </summary>
            <div class="accordion-details__content accordion-details__content--price">
              <price-range class="grid gap-6">
                <label class="visually-hidden" for="FacetFormRangeFromPrice-{{ context }}">
                  {{- 'products.facets.from' | t -}}
                </label>
                <label class="visually-hidden" for="FacetFormRangeToPrice-{{ context }}">
                  {{- 'products.facets.to' | t -}}
                </label>
                <div
                  class="facet-range-wrapper relative"
                  style="--range-min: {{ lower_progress_limit }}%; --range-max: {{ higher_progress_limit }}%;"
                >
                  <input
                    class="facet-range facet-range__min w-full pointer-events-none"
                    type="range"
                    min="0"
                    max="{{ range_max | ceil }}"
                    step="{{ step_value }}"
                    value="{{ min_value | ceil }}"
                    id="FacetFormRangeFromPrice-{{ context }}"
                  >
                  <input
                    class="facet-range facet-range__max w-full pointer-events-none absolute"
                    type="range"
                    min="0"
                    max="{{ range_max | ceil }}"
                    step="{{ step_value }}"
                    value="{{ max_value | ceil }}"
                    id="FacetFormRangeToPrice-{{ context }}"
                  >
                </div>
                <div class="facet-input-wrapper flex items-center gap-5">
                  <div class="flex items-center flex-grow relative">
                    <label class="visually-hidden" for="FacetFormInputFromPrice-{{ context }}">
                      {{- 'products.facets.from' | t -}}
                    </label>
                    <span class="facet-range__symbol">{{ cart.currency.symbol }}</span>
                    <input
                      class="form-control facet-range__input"
                      type="number"
                      inputmode="numeric"
                      name="{{ filter.min_value.param_name }}"
                      id="FacetFormInputFromPrice-{{ context }}"
                      autocomplete="off"
                      placeholder="0"
                      min="0"
                      max="{{ max_value | ceil }}"
                      step="{{ step_value }}"
                      {% if filter.min_value.value %}
                        value="{{ min_value | ceil }}"
                      {% endif %}
                    >
                  </div>
                  <span>{{ 'products.facets.to' | t }}</span>
                  <div class="flex items-center flex-grow relative">
                    <label class="visually-hidden" for="FacetFormInputToPrice-{{ context }}">
                      {{- 'products.facets.to' | t -}}
                    </label>
                    <span class="facet-range__symbol">{{ cart.currency.symbol }}</span>
                    <input
                      class="form-control facet-range__input"
                      type="number"
                      inputmode="numeric"
                      name="{{ filter.max_value.param_name }}"
                      id="FacetFormInputToPrice-{{ context }}"
                      autocomplete="off"
                      placeholder="{{ range_max | ceil }}"
                      min="{{ min_value | ceil }}"
                      max="{{ range_max | ceil }}"
                      step="{{ step_value }}"
                      {% if filter.max_value.value %}
                        value="{{ max_value | ceil }}"
                      {% endif %}
                    >
                  </div>
                </div>
              </price-range>
            </div>
          </details>
      {%- endcase -%}
    {%- endfor -%}
  </form>
{%- endif -%}
